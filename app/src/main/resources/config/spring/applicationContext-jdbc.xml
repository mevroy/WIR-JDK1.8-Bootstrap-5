<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

<!-- Commented for now import resource="applicationContext-properties.xml" /> -->
    <!-- For Heroku Postgres
    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() + '?sslmode=require&amp;currentSchema=groupsall' }"/>
        <property name="user" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        <property name="preferredTestQuery" value="SELECT 1"/>
        <property name="minPoolSize" value="${hibernate.c3p0.min_size}"></property>
        <property name="maxPoolSize" value="${hibernate.c3p0.max_size}"></property>
        <property name="maxStatements" value="${hibernate.c3p0.max_statements}"></property>
        <property name="idleConnectionTestPeriod" value="${hibernate.c3p0.idleConnectionTestPeriod}"></property>
        <property name="maxIdleTime" value="${hibernate.c3p0.maxIdleTime}"></property>
        <property name="checkoutTimeout" value="${hibernate.c3p0.checkoutTimeout}"></property>
    </bean> -->

    <!-- Configuring the data source bean for the entire system -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="preferredTestQuery" value="SELECT 1"/>
        <property name="minPoolSize" value="${hibernate.c3p0.min_size}"></property>
        <property name="maxPoolSize" value="${hibernate.c3p0.max_size}"></property>
        <property name="maxStatements" value="${hibernate.c3p0.max_statements}"></property>
        <property name="idleConnectionTestPeriod" value="${hibernate.c3p0.idleConnectionTestPeriod}"></property>
        <property name="maxIdleTime" value="${hibernate.c3p0.maxIdleTime}"></property>
        <property name="checkoutTimeout" value="${hibernate.c3p0.checkoutTimeout}"></property>
    </bean>

    <bean id="dataSourceInitializer" class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
        <property name="dataSource" ref="dataSource"/>
        <property name="databasePopulator">
            <bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
                <property name="continueOnError" value="true"/>
                <property name="scripts">
                    <list>
                        <value>classpath:config/database/sqls/schema-drop-postgresql.sql</value>
                        <value>classpath:config/database/sqls/schema-postgresql.sql</value>
                    </list>
                </property>
            </bean>
        </property>
        <property name="enabled" value="true"/>
    </bean>

    <!-- Configuring the session factory for hibernate -->
   <!-- Changed below to forur to support stateless  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- Setting up the data source as defined in an external context file: applicationContext-jdbc.xml -->
        <property name="dataSource" ref="dataSource"/>

        <property name="packagesToScan" value="com.mrd.yourwebproject.model"/>

        <!-- Setting the Hibernate config file path for linking up the entity POJOs -->
        <!-- property name="configLocation" value="classpath:config/database/hibernate.cfg.xml"/>  -->

        <property name="hibernateProperties">
            <props>
               <!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</prop> -->
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL10Dialect</prop>
                <!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.physical_naming_strategy">org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl</prop>
                <prop key="hibernate.implicit_naming_strategy">org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl</prop>

                <!--    <prop key="hibernate.format_sql">true</prop>
                     <prop key="hibernate.generate_statistics">true</prop>  -->
                <!-- prop key="hibernate.connection.provider_class">org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider</prop>  -->
            </props>
        </property>

    </bean>

   <!-- Changed below to forur to support stateless   <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven/>
</beans>