<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		   http://www.springframework.org/schema/mvc
		   http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		   	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- Added entry into Web.xml import resource="applicationContext-properties.xml" 
		/> <import resource="applicationContext-mail.xml" /> <import resource="applicationContext-jdbc.xml" 
		/> <import resource="applicationContext-repository.xml" /> <import resource="applicationContext-scheduler.xml" 
		/> <import resource="applicationContext-service.xml" /> <import resource="applicationContext-jobs.xml" 
		/> -->




	<mvc:annotation-driven />



	<!-- Handles HTTP GET requests for /res/** by efficiently serving up static 
		resources in the ${webappRoot}/res directory -->
	<mvc:resources mapping="/res/**" location="/res/" />

	<mvc:interceptors>
		<bean
			class="com.mrd.yourwebproject.interceptor.UserValidationInterceptor" />
		<bean
			class="com.mrd.yourwebproject.interceptor.AttributesPopulatingInterceptor" />			
		<bean
			class="com.mrd.yourwebproject.interceptor.LoggingInterceptor" />			

	</mvc:interceptors>

	<!-- Content Negotiation Manager for media type handling -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html"/>
				<entry key="json" value="application/json"/>
			</map>
		</property>
	</bean>

	<!-- Standard JSP View Resolver for non-Tiles views -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<!-- Content Negotiating View Resolver -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="contentNegotiationManager"/>
		<property name="viewResolvers">
			<list>
				<ref bean="tilesViewResolver"/>
				<ref bean="jspViewResolver"/>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="prefixJson" value="true"/>
				</bean>
			</list>
		</property>
	</bean>

	<!-- Apache Tiles Configurer -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:tiles/templates.web.xml</value>
			</list>
		</property>
		<property name="validateDefinitions" value="false" />
	</bean>

	<!-- Tiles View Resolver -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	</bean>

	<!-- Multipart Resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- Setting maximum upload size -->
		<property name="maxUploadSize" value="20971520"/>
		<property name="maxInMemorySize" value="1048576"/>
	</bean>

	<!-- Add controller package to be scanned for this path Commented for batch -->
	<context:component-scan
		base-package="com.mrd.yourwebproject.webapp.controller" />

	<tx:annotation-driven />

	<!-- bean id="emailProcessorTimer" class="com.mrd.yourwebproject.scheduler.BatchScheduler" 
		scope="singleton" /> -->
</beans>